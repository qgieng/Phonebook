{"version":3,"sources":["components/LoadNames.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["LoadNames","person","handleDelete","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setNewFilter","notification","setNewNotification","useEffect","contactService","returnedContacts","ContactsToShow","toLowerCase","indexOf","value","onChange","event","target","onSubmit","preventDefault","found","find","console","log","addedName","undefined","returnedName","concat","catch","error","window","confirm","returnedContact","map","type","key","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c3e03d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst LoadNames= ({person,handleDelete})=>{\r\n    return(\r\n    <>\r\n    <p>{person.name}  {person.number}\r\n        <button onClick={handleDelete}>delete</button></p>\r\n    </>)\r\n}\r\n\r\nexport default LoadNames;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response =>{\r\n    //console.log('data deleted' ,response.data);\r\n    return response.data})\r\n}\r\n\r\nconst update = (id,newObject)=>{\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default{ \r\n    getAll, \r\n    create, \r\n    deleteContact,\r\n    update\r\n  }","import React from 'react'\r\n\r\nconst Notification = ({message})=>{\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Notification;","import React, { useState ,useEffect} from 'react'\r\nimport LoadNames from './components/LoadNames'\r\nimport contactService from './services/contacts'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([\r\n      ]);\r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber, setNewNumber ] = useState('');\r\n    const [ filter, setNewFilter ] = useState('');\r\n    const [notification, setNewNotification] = useState(null); \r\n\r\n    const handleNameChange= (event)=>{setNewName(event.target.value);\r\n    }\r\n    const handleNumberChange= (event)=>{setNewNumber(event.target.value);\r\n    }\r\n    const handleFilterChange= (event)=>{setNewFilter(event.target.value);\r\n    }\r\n\r\n    const HandleAddName= (event)=>{\r\n        event.preventDefault();\r\n        const found = persons.find(person=> person.name === newName )\r\n        console.log(\"found person\" , found);\r\n        const addedName = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        //change if add/update contact.\r\n        if(found!== null && found !== undefined){\r\n            const confirmation = window.confirm(`${newName} is already added to phonebook \\n Would you like to replace the old number with a new one?`);\r\n            if(confirmation){\r\n                contactService.update(found.id, addedName)\r\n                    .then(returnedContact=>{\r\n                        console.log('updated contacts', returnedContact);\r\n                        setPersons(persons.map(person=> person.id !== found.id? person: returnedContact));\r\n                        setNewNotification(`Changed number of ${found.name}`);\r\n\r\n                    })\r\n                setNewName('');\r\n                setNewNumber('');\r\n            }\r\n            return;\r\n        }\r\n        contactService.create(addedName)\r\n            .then(returnedName=>{\r\n                setPersons(persons.concat(returnedName));\r\n                setNewNotification(`Added ${addedName.name}`);\r\n            })\r\n            .catch(error=>{\r\n                //console.log('error printed here', error.response.data.error);\r\n                setNewNotification(error.response.data.error);\r\n            });\r\n        \r\n        setNewName('');\r\n        setNewNumber('');\r\n    };\r\n\r\n    const handleDeleteOf= (name)=>{\r\n        const result = window.confirm(`Delete ${name.name}?`);\r\n        if(result){\r\n            contactService.deleteContact(name.id);\r\n            setPersons(persons.filter(p => p.id !==name.id)); \r\n            setNewNotification(`Delete ${name.name}`) \r\n        }\r\n    };\r\n\r\n\r\n    const hook= () =>{\r\n        contactService.getAll()\r\n            .then(returnedContacts=>{\r\n                setPersons(returnedContacts);\r\n            })\r\n    };\r\n\r\n    useEffect(hook,[]);\r\n    \r\n    const ContactsToShow = (filter === '')? persons\r\n        : persons.filter((person)=>{ \r\n            return person.name.toLowerCase().indexOf(filter.toLowerCase()) !==-1\r\n        })\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notification}/>\r\n            <div>\r\n                <p>filter shown with\r\n                    <input \r\n                        value={filter}\r\n                        onChange={handleFilterChange}/>\r\n                </p>\r\n            </div>\r\n\r\n            <h2>Add a new</h2>\r\n            <form onSubmit={HandleAddName}>\r\n                <div>\r\n                    name: <input value={newName}\r\n                        onChange={handleNameChange}/>\r\n                    <br/>\r\n                    number: <input value= {newNumber}\r\n                        onChange={handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\" >add</button>\r\n                </div>\r\n            </form>\r\n            <h2>Numbers</h2>\r\n            {ContactsToShow.map((person)=>{\r\n                return <LoadNames key={person.name+person.number} \r\n                            person={person} \r\n                            handleDelete={()=>{\r\n                                handleDeleteOf(person)}}\r\n                            />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}